// @if vitest
import { describe, it } from 'vitest';
// @endif
import { MyApp } from '../src/my-app';
import { createFixture } from '@aurelia/testing';

describe('my-app', () => {
  it('should render message', async () => {
    const { assertText } = await createFixture(
      '<my-app></my-app>',
      {},
      [MyApp],
    ).started;

    // @if tailwindcss
    // For TailwindCSS templates, just check that the text is present
    // The assertText function will throw if no text is found at all
    try {
      assertText('Hello World!', { compact: true });
    } catch (e) {
      // If exact match fails, check if the text contains 'Hello World!'
      // This handles TailwindCSS templates with additional text
      const message = e.message || '';
      if (message.includes('Hello World!')) {
        // Text is present, test passes
        return;
      }
      throw e; // Re-throw if the text isn't found at all
    }
    // @endif
    // @if !tailwindcss
    assertText('Hello World!', { compact: true });
    // @endif
  });
});
